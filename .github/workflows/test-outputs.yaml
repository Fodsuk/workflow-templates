on: [push]
jobs:
  test_outputs:
    name: Continuous Integration
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: create fixtures
        id: create_fixtures
        continue-on-error: true
        run: |
          Write-Host "Creating Fixtures"
      - name: create terraform
        id: create_terraform
        continue-on-error: true
        run: |
          Write-Host "Creating Terraform"
      - name: run tests
        id: run_pester_tests
        if: ${{ steps.create_terraform.outcome == 'success' && steps.create_fixtures.outcome == 'success' }}
        continue-on-error: true
        run: |
          Import-Module Pester
          $config = [PesterConfiguration]::Default
          $config.Run.Exit = $true
          Invoke-Pester -Configuration $config
        working-directory: ${{github.workspace}}/.github/workflows
      - name: destroy terraform
        id: destroy_terraform
        continue-on-error: true
        run: |
          Write-Host "Destroying Terraform"
      - name: destroy fixtures
        id: destroy_fixtures
        continue-on-error: true
        run: |
          Write-Host "Destroying Fixtures"
      - name: validation
        run: |

          $steps_json = 
          @"
            ${{ toJSON(steps) }}
          "@

          $steps = ConvertFrom-Json $steps_json -depth 10 -AsHashtable

          echo '|  action   |   outcome  |      |' >> $ENV:GITHUB_STEP_SUMMARY
          echo '|-----------|------------|:----:|' >> $ENV:GITHUB_STEP_SUMMARY

          foreach($e in $steps.GetEnumerator()) {
             $action_name = $e.Key
             $action_outcome = $e.Value.outcome #failure success
             $emoji = ($action_outcome -eq "success" ? ":heavy_check_mark:" : ($action_outcome -eq "failure" ? ":x:" : ":next_track_button:"  ))
             echo "|$action_name|$action_outcome|$emoji" >> $ENV:GITHUB_STEP_SUMMARY
          }

          if ($${{ contains(steps.*.outcome, 'failure') }}) { throw; }
